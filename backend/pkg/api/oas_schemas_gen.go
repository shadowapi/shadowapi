// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"net/url"
	"time"

	"github.com/go-faster/jx"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// Ref: #
type Datasource struct {
	UUID            string    `json:"uuid"`
	UserUUID        OptString `json:"user_uuid"`
	Email           OptString `json:"email"`
	ImapServer      OptString `json:"imap_server"`
	IsEnabled       bool      `json:"is_enabled"`
	Name            string    `json:"name"`
	OAuth2ClientID  OptString `json:"oauth2_client_id"`
	OAuth2TokenUUID OptString `json:"oauth2_token_uuid"`
	Password        OptString `json:"password"`
	Provider        OptString `json:"provider"`
	SMTPServer      OptString `json:"smtp_server"`
	SMTPTLS         OptBool   `json:"smtp_tls"`
	Type            string    `json:"type"`
	UpdatedAt       time.Time `json:"updated_at"`
	CreatedAt       time.Time `json:"created_at"`
}

// GetUUID returns the value of UUID.
func (s *Datasource) GetUUID() string {
	return s.UUID
}

// GetUserUUID returns the value of UserUUID.
func (s *Datasource) GetUserUUID() OptString {
	return s.UserUUID
}

// GetEmail returns the value of Email.
func (s *Datasource) GetEmail() OptString {
	return s.Email
}

// GetImapServer returns the value of ImapServer.
func (s *Datasource) GetImapServer() OptString {
	return s.ImapServer
}

// GetIsEnabled returns the value of IsEnabled.
func (s *Datasource) GetIsEnabled() bool {
	return s.IsEnabled
}

// GetName returns the value of Name.
func (s *Datasource) GetName() string {
	return s.Name
}

// GetOAuth2ClientID returns the value of OAuth2ClientID.
func (s *Datasource) GetOAuth2ClientID() OptString {
	return s.OAuth2ClientID
}

// GetOAuth2TokenUUID returns the value of OAuth2TokenUUID.
func (s *Datasource) GetOAuth2TokenUUID() OptString {
	return s.OAuth2TokenUUID
}

// GetPassword returns the value of Password.
func (s *Datasource) GetPassword() OptString {
	return s.Password
}

// GetProvider returns the value of Provider.
func (s *Datasource) GetProvider() OptString {
	return s.Provider
}

// GetSMTPServer returns the value of SMTPServer.
func (s *Datasource) GetSMTPServer() OptString {
	return s.SMTPServer
}

// GetSMTPTLS returns the value of SMTPTLS.
func (s *Datasource) GetSMTPTLS() OptBool {
	return s.SMTPTLS
}

// GetType returns the value of Type.
func (s *Datasource) GetType() string {
	return s.Type
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Datasource) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Datasource) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetUUID sets the value of UUID.
func (s *Datasource) SetUUID(val string) {
	s.UUID = val
}

// SetUserUUID sets the value of UserUUID.
func (s *Datasource) SetUserUUID(val OptString) {
	s.UserUUID = val
}

// SetEmail sets the value of Email.
func (s *Datasource) SetEmail(val OptString) {
	s.Email = val
}

// SetImapServer sets the value of ImapServer.
func (s *Datasource) SetImapServer(val OptString) {
	s.ImapServer = val
}

// SetIsEnabled sets the value of IsEnabled.
func (s *Datasource) SetIsEnabled(val bool) {
	s.IsEnabled = val
}

// SetName sets the value of Name.
func (s *Datasource) SetName(val string) {
	s.Name = val
}

// SetOAuth2ClientID sets the value of OAuth2ClientID.
func (s *Datasource) SetOAuth2ClientID(val OptString) {
	s.OAuth2ClientID = val
}

// SetOAuth2TokenUUID sets the value of OAuth2TokenUUID.
func (s *Datasource) SetOAuth2TokenUUID(val OptString) {
	s.OAuth2TokenUUID = val
}

// SetPassword sets the value of Password.
func (s *Datasource) SetPassword(val OptString) {
	s.Password = val
}

// SetProvider sets the value of Provider.
func (s *Datasource) SetProvider(val OptString) {
	s.Provider = val
}

// SetSMTPServer sets the value of SMTPServer.
func (s *Datasource) SetSMTPServer(val OptString) {
	s.SMTPServer = val
}

// SetSMTPTLS sets the value of SMTPTLS.
func (s *Datasource) SetSMTPTLS(val OptBool) {
	s.SMTPTLS = val
}

// SetType sets the value of Type.
func (s *Datasource) SetType(val string) {
	s.Type = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Datasource) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Datasource) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #
type DatasourceEmailCreate struct {
	// Email address of the user.
	Email string `json:"email"`
	// IMAP server address.
	ImapServer      OptString `json:"imap_server"`
	IsEnabled       bool      `json:"is_enabled"`
	Name            string    `json:"name"`
	OAuth2ClientID  OptString `json:"oauth2_client_id"`
	OAuth2TokenUUID OptString `json:"oauth2_token_uuid"`
	// Password of the email address.
	Password OptString `json:"password"`
	Provider OptString `json:"provider"`
	// SMTP server address.
	SMTPServer OptString `json:"smtp_server"`
	// SMTP TLS flag.
	SMTPTLS OptBool `json:"smtp_tls"`
}

// GetEmail returns the value of Email.
func (s *DatasourceEmailCreate) GetEmail() string {
	return s.Email
}

// GetImapServer returns the value of ImapServer.
func (s *DatasourceEmailCreate) GetImapServer() OptString {
	return s.ImapServer
}

// GetIsEnabled returns the value of IsEnabled.
func (s *DatasourceEmailCreate) GetIsEnabled() bool {
	return s.IsEnabled
}

// GetName returns the value of Name.
func (s *DatasourceEmailCreate) GetName() string {
	return s.Name
}

// GetOAuth2ClientID returns the value of OAuth2ClientID.
func (s *DatasourceEmailCreate) GetOAuth2ClientID() OptString {
	return s.OAuth2ClientID
}

// GetOAuth2TokenUUID returns the value of OAuth2TokenUUID.
func (s *DatasourceEmailCreate) GetOAuth2TokenUUID() OptString {
	return s.OAuth2TokenUUID
}

// GetPassword returns the value of Password.
func (s *DatasourceEmailCreate) GetPassword() OptString {
	return s.Password
}

// GetProvider returns the value of Provider.
func (s *DatasourceEmailCreate) GetProvider() OptString {
	return s.Provider
}

// GetSMTPServer returns the value of SMTPServer.
func (s *DatasourceEmailCreate) GetSMTPServer() OptString {
	return s.SMTPServer
}

// GetSMTPTLS returns the value of SMTPTLS.
func (s *DatasourceEmailCreate) GetSMTPTLS() OptBool {
	return s.SMTPTLS
}

// SetEmail sets the value of Email.
func (s *DatasourceEmailCreate) SetEmail(val string) {
	s.Email = val
}

// SetImapServer sets the value of ImapServer.
func (s *DatasourceEmailCreate) SetImapServer(val OptString) {
	s.ImapServer = val
}

// SetIsEnabled sets the value of IsEnabled.
func (s *DatasourceEmailCreate) SetIsEnabled(val bool) {
	s.IsEnabled = val
}

// SetName sets the value of Name.
func (s *DatasourceEmailCreate) SetName(val string) {
	s.Name = val
}

// SetOAuth2ClientID sets the value of OAuth2ClientID.
func (s *DatasourceEmailCreate) SetOAuth2ClientID(val OptString) {
	s.OAuth2ClientID = val
}

// SetOAuth2TokenUUID sets the value of OAuth2TokenUUID.
func (s *DatasourceEmailCreate) SetOAuth2TokenUUID(val OptString) {
	s.OAuth2TokenUUID = val
}

// SetPassword sets the value of Password.
func (s *DatasourceEmailCreate) SetPassword(val OptString) {
	s.Password = val
}

// SetProvider sets the value of Provider.
func (s *DatasourceEmailCreate) SetProvider(val OptString) {
	s.Provider = val
}

// SetSMTPServer sets the value of SMTPServer.
func (s *DatasourceEmailCreate) SetSMTPServer(val OptString) {
	s.SMTPServer = val
}

// SetSMTPTLS sets the value of SMTPTLS.
func (s *DatasourceEmailCreate) SetSMTPTLS(val OptBool) {
	s.SMTPTLS = val
}

// DatasourceEmailDeleteOK is response for DatasourceEmailDelete operation.
type DatasourceEmailDeleteOK struct{}

type DatasourceEmailRunPipelineOK struct {
	// List of labels.
	Labels []MailLabel `json:"labels"`
}

// GetLabels returns the value of Labels.
func (s *DatasourceEmailRunPipelineOK) GetLabels() []MailLabel {
	return s.Labels
}

// SetLabels sets the value of Labels.
func (s *DatasourceEmailRunPipelineOK) SetLabels(val []MailLabel) {
	s.Labels = val
}

// Ref: #
type DatasourceEmailUpdate struct {
	// IMAP server address.
	ImapServer      OptString `json:"imap_server"`
	IsEnabled       OptBool   `json:"is_enabled"`
	Name            OptString `json:"name"`
	OAuth2ClientID  OptString `json:"oauth2_client_id"`
	OAuth2TokenUUID OptString `json:"oauth2_token_uuid"`
	// Password of the email address.
	Password OptString `json:"password"`
	// SMTP server address.
	SMTPServer OptString `json:"smtp_server"`
	// SMTP TLS flag.
	SMTPTLS OptBool `json:"smtp_tls"`
}

// GetImapServer returns the value of ImapServer.
func (s *DatasourceEmailUpdate) GetImapServer() OptString {
	return s.ImapServer
}

// GetIsEnabled returns the value of IsEnabled.
func (s *DatasourceEmailUpdate) GetIsEnabled() OptBool {
	return s.IsEnabled
}

// GetName returns the value of Name.
func (s *DatasourceEmailUpdate) GetName() OptString {
	return s.Name
}

// GetOAuth2ClientID returns the value of OAuth2ClientID.
func (s *DatasourceEmailUpdate) GetOAuth2ClientID() OptString {
	return s.OAuth2ClientID
}

// GetOAuth2TokenUUID returns the value of OAuth2TokenUUID.
func (s *DatasourceEmailUpdate) GetOAuth2TokenUUID() OptString {
	return s.OAuth2TokenUUID
}

// GetPassword returns the value of Password.
func (s *DatasourceEmailUpdate) GetPassword() OptString {
	return s.Password
}

// GetSMTPServer returns the value of SMTPServer.
func (s *DatasourceEmailUpdate) GetSMTPServer() OptString {
	return s.SMTPServer
}

// GetSMTPTLS returns the value of SMTPTLS.
func (s *DatasourceEmailUpdate) GetSMTPTLS() OptBool {
	return s.SMTPTLS
}

// SetImapServer sets the value of ImapServer.
func (s *DatasourceEmailUpdate) SetImapServer(val OptString) {
	s.ImapServer = val
}

// SetIsEnabled sets the value of IsEnabled.
func (s *DatasourceEmailUpdate) SetIsEnabled(val OptBool) {
	s.IsEnabled = val
}

// SetName sets the value of Name.
func (s *DatasourceEmailUpdate) SetName(val OptString) {
	s.Name = val
}

// SetOAuth2ClientID sets the value of OAuth2ClientID.
func (s *DatasourceEmailUpdate) SetOAuth2ClientID(val OptString) {
	s.OAuth2ClientID = val
}

// SetOAuth2TokenUUID sets the value of OAuth2TokenUUID.
func (s *DatasourceEmailUpdate) SetOAuth2TokenUUID(val OptString) {
	s.OAuth2TokenUUID = val
}

// SetPassword sets the value of Password.
func (s *DatasourceEmailUpdate) SetPassword(val OptString) {
	s.Password = val
}

// SetSMTPServer sets the value of SMTPServer.
func (s *DatasourceEmailUpdate) SetSMTPServer(val OptString) {
	s.SMTPServer = val
}

// SetSMTPTLS sets the value of SMTPTLS.
func (s *DatasourceEmailUpdate) SetSMTPTLS(val OptBool) {
	s.SMTPTLS = val
}

// DatasourceSetOAuth2ClientNoContent is response for DatasourceSetOAuth2Client operation.
type DatasourceSetOAuth2ClientNoContent struct{}

type DatasourceSetOAuth2ClientReq struct {
	// OAuth2 client ID.
	ClientID string `json:"client_id"`
}

// GetClientID returns the value of ClientID.
func (s *DatasourceSetOAuth2ClientReq) GetClientID() string {
	return s.ClientID
}

// SetClientID sets the value of ClientID.
func (s *DatasourceSetOAuth2ClientReq) SetClientID(val string) {
	s.ClientID = val
}

// Ref: #
type Error struct {
	// A human-readable explanation specific to this occurrence of the problem.
	Detail OptString `json:"detail"`
	// Optional list of individual error details.
	Errors []ErrorErrorsItem `json:"errors"`
	// HTTP status code.
	Status OptInt64 `json:"status"`
}

// GetDetail returns the value of Detail.
func (s *Error) GetDetail() OptString {
	return s.Detail
}

// GetErrors returns the value of Errors.
func (s *Error) GetErrors() []ErrorErrorsItem {
	return s.Errors
}

// GetStatus returns the value of Status.
func (s *Error) GetStatus() OptInt64 {
	return s.Status
}

// SetDetail sets the value of Detail.
func (s *Error) SetDetail(val OptString) {
	s.Detail = val
}

// SetErrors sets the value of Errors.
func (s *Error) SetErrors(val []ErrorErrorsItem) {
	s.Errors = val
}

// SetStatus sets the value of Status.
func (s *Error) SetStatus(val OptInt64) {
	s.Status = val
}

type ErrorErrorsItem struct {
	// Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'.
	Location OptString `json:"location"`
	// Error message text.
	Message OptString `json:"message"`
	// The value at the given location.
	Value OptString `json:"value"`
}

// GetLocation returns the value of Location.
func (s *ErrorErrorsItem) GetLocation() OptString {
	return s.Location
}

// GetMessage returns the value of Message.
func (s *ErrorErrorsItem) GetMessage() OptString {
	return s.Message
}

// GetValue returns the value of Value.
func (s *ErrorErrorsItem) GetValue() OptString {
	return s.Value
}

// SetLocation sets the value of Location.
func (s *ErrorErrorsItem) SetLocation(val OptString) {
	s.Location = val
}

// SetMessage sets the value of Message.
func (s *ErrorErrorsItem) SetMessage(val OptString) {
	s.Message = val
}

// SetValue sets the value of Value.
func (s *ErrorErrorsItem) SetValue(val OptString) {
	s.Value = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// Ref: #
type MailLabel struct {
	HTTPStatusCode        int64             `json:"HTTPStatusCode"`
	Header                MailLabelHeader   `json:"Header"`
	ID                    OptString         `json:"id"`
	Color                 OptMailLabelColor `json:"color"`
	LabelListVisibility   OptString         `json:"labelListVisibility"`
	MessageListVisibility OptString         `json:"messageListVisibility"`
	MessagesTotal         OptInt64          `json:"messagesTotal"`
	MessagesUnread        OptInt64          `json:"messagesUnread"`
	Name                  OptString         `json:"name"`
	ThreadsTotal          OptInt64          `json:"threadsTotal"`
	ThreadsUnread         OptInt64          `json:"threadsUnread"`
	Type                  OptString         `json:"type"`
}

// GetHTTPStatusCode returns the value of HTTPStatusCode.
func (s *MailLabel) GetHTTPStatusCode() int64 {
	return s.HTTPStatusCode
}

// GetHeader returns the value of Header.
func (s *MailLabel) GetHeader() MailLabelHeader {
	return s.Header
}

// GetID returns the value of ID.
func (s *MailLabel) GetID() OptString {
	return s.ID
}

// GetColor returns the value of Color.
func (s *MailLabel) GetColor() OptMailLabelColor {
	return s.Color
}

// GetLabelListVisibility returns the value of LabelListVisibility.
func (s *MailLabel) GetLabelListVisibility() OptString {
	return s.LabelListVisibility
}

// GetMessageListVisibility returns the value of MessageListVisibility.
func (s *MailLabel) GetMessageListVisibility() OptString {
	return s.MessageListVisibility
}

// GetMessagesTotal returns the value of MessagesTotal.
func (s *MailLabel) GetMessagesTotal() OptInt64 {
	return s.MessagesTotal
}

// GetMessagesUnread returns the value of MessagesUnread.
func (s *MailLabel) GetMessagesUnread() OptInt64 {
	return s.MessagesUnread
}

// GetName returns the value of Name.
func (s *MailLabel) GetName() OptString {
	return s.Name
}

// GetThreadsTotal returns the value of ThreadsTotal.
func (s *MailLabel) GetThreadsTotal() OptInt64 {
	return s.ThreadsTotal
}

// GetThreadsUnread returns the value of ThreadsUnread.
func (s *MailLabel) GetThreadsUnread() OptInt64 {
	return s.ThreadsUnread
}

// GetType returns the value of Type.
func (s *MailLabel) GetType() OptString {
	return s.Type
}

// SetHTTPStatusCode sets the value of HTTPStatusCode.
func (s *MailLabel) SetHTTPStatusCode(val int64) {
	s.HTTPStatusCode = val
}

// SetHeader sets the value of Header.
func (s *MailLabel) SetHeader(val MailLabelHeader) {
	s.Header = val
}

// SetID sets the value of ID.
func (s *MailLabel) SetID(val OptString) {
	s.ID = val
}

// SetColor sets the value of Color.
func (s *MailLabel) SetColor(val OptMailLabelColor) {
	s.Color = val
}

// SetLabelListVisibility sets the value of LabelListVisibility.
func (s *MailLabel) SetLabelListVisibility(val OptString) {
	s.LabelListVisibility = val
}

// SetMessageListVisibility sets the value of MessageListVisibility.
func (s *MailLabel) SetMessageListVisibility(val OptString) {
	s.MessageListVisibility = val
}

// SetMessagesTotal sets the value of MessagesTotal.
func (s *MailLabel) SetMessagesTotal(val OptInt64) {
	s.MessagesTotal = val
}

// SetMessagesUnread sets the value of MessagesUnread.
func (s *MailLabel) SetMessagesUnread(val OptInt64) {
	s.MessagesUnread = val
}

// SetName sets the value of Name.
func (s *MailLabel) SetName(val OptString) {
	s.Name = val
}

// SetThreadsTotal sets the value of ThreadsTotal.
func (s *MailLabel) SetThreadsTotal(val OptInt64) {
	s.ThreadsTotal = val
}

// SetThreadsUnread sets the value of ThreadsUnread.
func (s *MailLabel) SetThreadsUnread(val OptInt64) {
	s.ThreadsUnread = val
}

// SetType sets the value of Type.
func (s *MailLabel) SetType(val OptString) {
	s.Type = val
}

type MailLabelColor struct {
	BackgroundColor OptString `json:"backgroundColor"`
	TextColor       OptString `json:"textColor"`
}

// GetBackgroundColor returns the value of BackgroundColor.
func (s *MailLabelColor) GetBackgroundColor() OptString {
	return s.BackgroundColor
}

// GetTextColor returns the value of TextColor.
func (s *MailLabelColor) GetTextColor() OptString {
	return s.TextColor
}

// SetBackgroundColor sets the value of BackgroundColor.
func (s *MailLabelColor) SetBackgroundColor(val OptString) {
	s.BackgroundColor = val
}

// SetTextColor sets the value of TextColor.
func (s *MailLabelColor) SetTextColor(val OptString) {
	s.TextColor = val
}

type MailLabelHeader map[string][]string

func (s *MailLabelHeader) init() MailLabelHeader {
	m := *s
	if m == nil {
		m = map[string][]string{}
		*s = m
	}
	return m
}

// Ref: #
type OAuth2Client struct {
	ID        string    `json:"id"`
	Name      string    `json:"name"`
	Provider  string    `json:"provider"`
	Secret    string    `json:"secret"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *OAuth2Client) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *OAuth2Client) GetName() string {
	return s.Name
}

// GetProvider returns the value of Provider.
func (s *OAuth2Client) GetProvider() string {
	return s.Provider
}

// GetSecret returns the value of Secret.
func (s *OAuth2Client) GetSecret() string {
	return s.Secret
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OAuth2Client) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OAuth2Client) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *OAuth2Client) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OAuth2Client) SetName(val string) {
	s.Name = val
}

// SetProvider sets the value of Provider.
func (s *OAuth2Client) SetProvider(val string) {
	s.Provider = val
}

// SetSecret sets the value of Secret.
func (s *OAuth2Client) SetSecret(val string) {
	s.Secret = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OAuth2Client) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OAuth2Client) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// OAuth2ClientCallbackFound is response for OAuth2ClientCallback operation.
type OAuth2ClientCallbackFound struct {
	Location OptURI
}

// GetLocation returns the value of Location.
func (s *OAuth2ClientCallbackFound) GetLocation() OptURI {
	return s.Location
}

// SetLocation sets the value of Location.
func (s *OAuth2ClientCallbackFound) SetLocation(val OptURI) {
	s.Location = val
}

type OAuth2ClientCreateReq struct {
	// ID of the client.
	ID string `json:"id"`
	// Name of the client.
	Name string `json:"name"`
	// Provider of the client.
	Provider string `json:"provider"`
	// Secret of the client.
	Secret string `json:"secret"`
}

// GetID returns the value of ID.
func (s *OAuth2ClientCreateReq) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *OAuth2ClientCreateReq) GetName() string {
	return s.Name
}

// GetProvider returns the value of Provider.
func (s *OAuth2ClientCreateReq) GetProvider() string {
	return s.Provider
}

// GetSecret returns the value of Secret.
func (s *OAuth2ClientCreateReq) GetSecret() string {
	return s.Secret
}

// SetID sets the value of ID.
func (s *OAuth2ClientCreateReq) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *OAuth2ClientCreateReq) SetName(val string) {
	s.Name = val
}

// SetProvider sets the value of Provider.
func (s *OAuth2ClientCreateReq) SetProvider(val string) {
	s.Provider = val
}

// SetSecret sets the value of Secret.
func (s *OAuth2ClientCreateReq) SetSecret(val string) {
	s.Secret = val
}

// OAuth2ClientDeleteOK is response for OAuth2ClientDelete operation.
type OAuth2ClientDeleteOK struct{}

type OAuth2ClientListOK struct {
	// List of OAuth2 clients.
	Clients []OAuth2Client `json:"clients"`
}

// GetClients returns the value of Clients.
func (s *OAuth2ClientListOK) GetClients() []OAuth2Client {
	return s.Clients
}

// SetClients sets the value of Clients.
func (s *OAuth2ClientListOK) SetClients(val []OAuth2Client) {
	s.Clients = val
}

type OAuth2ClientLoginOK struct {
	// Auth code URL.
	AuthCodeURL string `json:"auth_code_url"`
}

// GetAuthCodeURL returns the value of AuthCodeURL.
func (s *OAuth2ClientLoginOK) GetAuthCodeURL() string {
	return s.AuthCodeURL
}

// SetAuthCodeURL sets the value of AuthCodeURL.
func (s *OAuth2ClientLoginOK) SetAuthCodeURL(val string) {
	s.AuthCodeURL = val
}

type OAuth2ClientLoginReq struct {
	// Client ID.
	ClientID string `json:"client_id"`
	// Query parameters.
	Query OAuth2ClientLoginReqQuery `json:"query"`
}

// GetClientID returns the value of ClientID.
func (s *OAuth2ClientLoginReq) GetClientID() string {
	return s.ClientID
}

// GetQuery returns the value of Query.
func (s *OAuth2ClientLoginReq) GetQuery() OAuth2ClientLoginReqQuery {
	return s.Query
}

// SetClientID sets the value of ClientID.
func (s *OAuth2ClientLoginReq) SetClientID(val string) {
	s.ClientID = val
}

// SetQuery sets the value of Query.
func (s *OAuth2ClientLoginReq) SetQuery(val OAuth2ClientLoginReqQuery) {
	s.Query = val
}

// Query parameters.
type OAuth2ClientLoginReqQuery map[string][]string

func (s *OAuth2ClientLoginReqQuery) init() OAuth2ClientLoginReqQuery {
	m := *s
	if m == nil {
		m = map[string][]string{}
		*s = m
	}
	return m
}

// Ref: #
type OAuth2ClientToken struct {
	UUID      string    `json:"uuid"`
	ClientID  string    `json:"client_id"`
	Name      string    `json:"name"`
	Token     string    `json:"token"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// GetUUID returns the value of UUID.
func (s *OAuth2ClientToken) GetUUID() string {
	return s.UUID
}

// GetClientID returns the value of ClientID.
func (s *OAuth2ClientToken) GetClientID() string {
	return s.ClientID
}

// GetName returns the value of Name.
func (s *OAuth2ClientToken) GetName() string {
	return s.Name
}

// GetToken returns the value of Token.
func (s *OAuth2ClientToken) GetToken() string {
	return s.Token
}

// GetCreatedAt returns the value of CreatedAt.
func (s *OAuth2ClientToken) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *OAuth2ClientToken) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *OAuth2ClientToken) SetUUID(val string) {
	s.UUID = val
}

// SetClientID sets the value of ClientID.
func (s *OAuth2ClientToken) SetClientID(val string) {
	s.ClientID = val
}

// SetName sets the value of Name.
func (s *OAuth2ClientToken) SetName(val string) {
	s.Name = val
}

// SetToken sets the value of Token.
func (s *OAuth2ClientToken) SetToken(val string) {
	s.Token = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *OAuth2ClientToken) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *OAuth2ClientToken) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// OAuth2ClientTokenDeleteOK is response for OAuth2ClientTokenDelete operation.
type OAuth2ClientTokenDeleteOK struct{}

type OAuth2ClientUpdateReq struct {
	// Name of the client.
	Name string `json:"name"`
	// Provider of the client.
	Provider string `json:"provider"`
	// Secret of the client.
	Secret string `json:"secret"`
}

// GetName returns the value of Name.
func (s *OAuth2ClientUpdateReq) GetName() string {
	return s.Name
}

// GetProvider returns the value of Provider.
func (s *OAuth2ClientUpdateReq) GetProvider() string {
	return s.Provider
}

// GetSecret returns the value of Secret.
func (s *OAuth2ClientUpdateReq) GetSecret() string {
	return s.Secret
}

// SetName sets the value of Name.
func (s *OAuth2ClientUpdateReq) SetName(val string) {
	s.Name = val
}

// SetProvider sets the value of Provider.
func (s *OAuth2ClientUpdateReq) SetProvider(val string) {
	s.Provider = val
}

// SetSecret sets the value of Secret.
func (s *OAuth2ClientUpdateReq) SetSecret(val string) {
	s.Secret = val
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMailLabelColor returns new OptMailLabelColor with value set to v.
func NewOptMailLabelColor(v MailLabelColor) OptMailLabelColor {
	return OptMailLabelColor{
		Value: v,
		Set:   true,
	}
}

// OptMailLabelColor is optional MailLabelColor.
type OptMailLabelColor struct {
	Value MailLabelColor
	Set   bool
}

// IsSet returns true if OptMailLabelColor was set.
func (o OptMailLabelColor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMailLabelColor) Reset() {
	var v MailLabelColor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMailLabelColor) SetTo(v MailLabelColor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMailLabelColor) Get() (v MailLabelColor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMailLabelColor) Or(d MailLabelColor) MailLabelColor {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptNilString returns new OptNilString with value set to v.
func NewOptNilString(v string) OptNilString {
	return OptNilString{
		Value: v,
		Set:   true,
	}
}

// OptNilString is optional nullable string.
type OptNilString struct {
	Value string
	Set   bool
	Null  bool
}

// IsSet returns true if OptNilString was set.
func (o OptNilString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptNilString) Reset() {
	var v string
	o.Value = v
	o.Set = false
	o.Null = false
}

// SetTo sets value to v.
func (o *OptNilString) SetTo(v string) {
	o.Set = true
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o OptNilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *OptNilString) SetToNull() {
	o.Set = true
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptNilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptNilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #
type Pipeline struct {
	UUID      string       `json:"uuid"`
	Name      string       `json:"name"`
	Flow      PipelineFlow `json:"flow"`
	CreatedAt OptDateTime  `json:"created_at"`
	UpdatedAt OptDateTime  `json:"updated_at"`
}

// GetUUID returns the value of UUID.
func (s *Pipeline) GetUUID() string {
	return s.UUID
}

// GetName returns the value of Name.
func (s *Pipeline) GetName() string {
	return s.Name
}

// GetFlow returns the value of Flow.
func (s *Pipeline) GetFlow() PipelineFlow {
	return s.Flow
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Pipeline) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Pipeline) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *Pipeline) SetUUID(val string) {
	s.UUID = val
}

// SetName sets the value of Name.
func (s *Pipeline) SetName(val string) {
	s.Name = val
}

// SetFlow sets the value of Flow.
func (s *Pipeline) SetFlow(val PipelineFlow) {
	s.Flow = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Pipeline) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Pipeline) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

type PipelineCreateReq struct {
	// Name of the pipeline.
	Name string `json:"name"`
	// Flow JSON to draw.
	Flow PipelineCreateReqFlow `json:"flow"`
}

// GetName returns the value of Name.
func (s *PipelineCreateReq) GetName() string {
	return s.Name
}

// GetFlow returns the value of Flow.
func (s *PipelineCreateReq) GetFlow() PipelineCreateReqFlow {
	return s.Flow
}

// SetName sets the value of Name.
func (s *PipelineCreateReq) SetName(val string) {
	s.Name = val
}

// SetFlow sets the value of Flow.
func (s *PipelineCreateReq) SetFlow(val PipelineCreateReqFlow) {
	s.Flow = val
}

// Flow JSON to draw.
type PipelineCreateReqFlow map[string]jx.Raw

func (s *PipelineCreateReqFlow) init() PipelineCreateReqFlow {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// PipelineDeleteOK is response for PipelineDelete operation.
type PipelineDeleteOK struct{}

// Ref: #
type PipelineEntry struct {
	UUID         string              `json:"uuid"`
	PipelineUUID string              `json:"pipeline_uuid"`
	ParentUUID   OptString           `json:"parent_uuid"`
	Type         string              `json:"type"`
	Params       PipelineEntryParams `json:"params"`
	CreatedAt    OptDateTime         `json:"created_at"`
	UpdatedAt    OptDateTime         `json:"updated_at"`
}

// GetUUID returns the value of UUID.
func (s *PipelineEntry) GetUUID() string {
	return s.UUID
}

// GetPipelineUUID returns the value of PipelineUUID.
func (s *PipelineEntry) GetPipelineUUID() string {
	return s.PipelineUUID
}

// GetParentUUID returns the value of ParentUUID.
func (s *PipelineEntry) GetParentUUID() OptString {
	return s.ParentUUID
}

// GetType returns the value of Type.
func (s *PipelineEntry) GetType() string {
	return s.Type
}

// GetParams returns the value of Params.
func (s *PipelineEntry) GetParams() PipelineEntryParams {
	return s.Params
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PipelineEntry) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *PipelineEntry) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetUUID sets the value of UUID.
func (s *PipelineEntry) SetUUID(val string) {
	s.UUID = val
}

// SetPipelineUUID sets the value of PipelineUUID.
func (s *PipelineEntry) SetPipelineUUID(val string) {
	s.PipelineUUID = val
}

// SetParentUUID sets the value of ParentUUID.
func (s *PipelineEntry) SetParentUUID(val OptString) {
	s.ParentUUID = val
}

// SetType sets the value of Type.
func (s *PipelineEntry) SetType(val string) {
	s.Type = val
}

// SetParams sets the value of Params.
func (s *PipelineEntry) SetParams(val PipelineEntryParams) {
	s.Params = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PipelineEntry) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *PipelineEntry) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

type PipelineEntryCreateReq struct {
	// UUID of the pipeline entry.
	UUID string `json:"uuid"`
	// Pipeline UUID.
	PipelineUUID string `json:"pipeline_uuid"`
	// Parent pipeline entry UUID.
	ParentUUID OptString `json:"parent_uuid"`
	// Type of pipeline entry.
	Type string `json:"type"`
	// Params of the Entry.
	Params PipelineEntryCreateReqParams `json:"params"`
}

// GetUUID returns the value of UUID.
func (s *PipelineEntryCreateReq) GetUUID() string {
	return s.UUID
}

// GetPipelineUUID returns the value of PipelineUUID.
func (s *PipelineEntryCreateReq) GetPipelineUUID() string {
	return s.PipelineUUID
}

// GetParentUUID returns the value of ParentUUID.
func (s *PipelineEntryCreateReq) GetParentUUID() OptString {
	return s.ParentUUID
}

// GetType returns the value of Type.
func (s *PipelineEntryCreateReq) GetType() string {
	return s.Type
}

// GetParams returns the value of Params.
func (s *PipelineEntryCreateReq) GetParams() PipelineEntryCreateReqParams {
	return s.Params
}

// SetUUID sets the value of UUID.
func (s *PipelineEntryCreateReq) SetUUID(val string) {
	s.UUID = val
}

// SetPipelineUUID sets the value of PipelineUUID.
func (s *PipelineEntryCreateReq) SetPipelineUUID(val string) {
	s.PipelineUUID = val
}

// SetParentUUID sets the value of ParentUUID.
func (s *PipelineEntryCreateReq) SetParentUUID(val OptString) {
	s.ParentUUID = val
}

// SetType sets the value of Type.
func (s *PipelineEntryCreateReq) SetType(val string) {
	s.Type = val
}

// SetParams sets the value of Params.
func (s *PipelineEntryCreateReq) SetParams(val PipelineEntryCreateReqParams) {
	s.Params = val
}

// Params of the Entry.
type PipelineEntryCreateReqParams map[string]jx.Raw

func (s *PipelineEntryCreateReqParams) init() PipelineEntryCreateReqParams {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// PipelineEntryDeleteOK is response for PipelineEntryDelete operation.
type PipelineEntryDeleteOK struct{}

type PipelineEntryParams map[string]jx.Raw

func (s *PipelineEntryParams) init() PipelineEntryParams {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

// Ref: #
type PipelineEntryType struct {
	UUID     string `json:"uuid"`
	Category string `json:"category"`
	FlowType string `json:"flow_type"`
	Name     string `json:"name"`
}

// GetUUID returns the value of UUID.
func (s *PipelineEntryType) GetUUID() string {
	return s.UUID
}

// GetCategory returns the value of Category.
func (s *PipelineEntryType) GetCategory() string {
	return s.Category
}

// GetFlowType returns the value of FlowType.
func (s *PipelineEntryType) GetFlowType() string {
	return s.FlowType
}

// GetName returns the value of Name.
func (s *PipelineEntryType) GetName() string {
	return s.Name
}

// SetUUID sets the value of UUID.
func (s *PipelineEntryType) SetUUID(val string) {
	s.UUID = val
}

// SetCategory sets the value of Category.
func (s *PipelineEntryType) SetCategory(val string) {
	s.Category = val
}

// SetFlowType sets the value of FlowType.
func (s *PipelineEntryType) SetFlowType(val string) {
	s.FlowType = val
}

// SetName sets the value of Name.
func (s *PipelineEntryType) SetName(val string) {
	s.Name = val
}

type PipelineEntryTypeListOK struct {
	// List of Pipeline Type Entries.
	Entries []PipelineEntryType `json:"entries"`
}

// GetEntries returns the value of Entries.
func (s *PipelineEntryTypeListOK) GetEntries() []PipelineEntryType {
	return s.Entries
}

// SetEntries sets the value of Entries.
func (s *PipelineEntryTypeListOK) SetEntries(val []PipelineEntryType) {
	s.Entries = val
}

type PipelineEntryUpdateReq struct {
	// Params of the Entry.
	Params PipelineEntryUpdateReqParams `json:"params"`
}

// GetParams returns the value of Params.
func (s *PipelineEntryUpdateReq) GetParams() PipelineEntryUpdateReqParams {
	return s.Params
}

// SetParams sets the value of Params.
func (s *PipelineEntryUpdateReq) SetParams(val PipelineEntryUpdateReqParams) {
	s.Params = val
}

// Params of the Entry.
type PipelineEntryUpdateReqParams map[string]jx.Raw

func (s *PipelineEntryUpdateReqParams) init() PipelineEntryUpdateReqParams {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

type PipelineFlow map[string]jx.Raw

func (s *PipelineFlow) init() PipelineFlow {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

type PipelineListOK struct {
	// List of Pipelines.
	Pipelines []Pipeline `json:"pipelines"`
}

// GetPipelines returns the value of Pipelines.
func (s *PipelineListOK) GetPipelines() []Pipeline {
	return s.Pipelines
}

// SetPipelines sets the value of Pipelines.
func (s *PipelineListOK) SetPipelines(val []Pipeline) {
	s.Pipelines = val
}

type PipelineUpdateReq struct {
	// Name of the client.
	Name string `json:"name"`
	// Flow JSON to draw.
	Flow PipelineUpdateReqFlow `json:"flow"`
}

// GetName returns the value of Name.
func (s *PipelineUpdateReq) GetName() string {
	return s.Name
}

// GetFlow returns the value of Flow.
func (s *PipelineUpdateReq) GetFlow() PipelineUpdateReqFlow {
	return s.Flow
}

// SetName sets the value of Name.
func (s *PipelineUpdateReq) SetName(val string) {
	s.Name = val
}

// SetFlow sets the value of Flow.
func (s *PipelineUpdateReq) SetFlow(val PipelineUpdateReqFlow) {
	s.Flow = val
}

// Flow JSON to draw.
type PipelineUpdateReqFlow map[string]jx.Raw

func (s *PipelineUpdateReqFlow) init() PipelineUpdateReqFlow {
	m := *s
	if m == nil {
		m = map[string]jx.Raw{}
		*s = m
	}
	return m
}

type SessionCookieAuth struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *SessionCookieAuth) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *SessionCookieAuth) SetAPIKey(val string) {
	s.APIKey = val
}

// Data storage settings object.
// Ref: #
type Storage struct {
	// Unique identifier for the storage object.
	UUID string `json:"uuid"`
	// Unique identifier for the user associated with the storage object.
	UserUUID OptString `json:"user_uuid"`
	// Name of the storage object.
	Name OptString `json:"name"`
	// Type of the storage object.
	Type string `json:"type"`
	// Indicates whether the storage object is enabled.
	IsEnabled bool `json:"is_enabled"`
	// The date and time when the storage object was last updated.
	UpdatedAt time.Time `json:"updated_at"`
	// The date and time when the storage object was created.
	CreatedAt time.Time `json:"created_at"`
}

// GetUUID returns the value of UUID.
func (s *Storage) GetUUID() string {
	return s.UUID
}

// GetUserUUID returns the value of UserUUID.
func (s *Storage) GetUserUUID() OptString {
	return s.UserUUID
}

// GetName returns the value of Name.
func (s *Storage) GetName() OptString {
	return s.Name
}

// GetType returns the value of Type.
func (s *Storage) GetType() string {
	return s.Type
}

// GetIsEnabled returns the value of IsEnabled.
func (s *Storage) GetIsEnabled() bool {
	return s.IsEnabled
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Storage) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Storage) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetUUID sets the value of UUID.
func (s *Storage) SetUUID(val string) {
	s.UUID = val
}

// SetUserUUID sets the value of UserUUID.
func (s *Storage) SetUserUUID(val OptString) {
	s.UserUUID = val
}

// SetName sets the value of Name.
func (s *Storage) SetName(val OptString) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *Storage) SetType(val string) {
	s.Type = val
}

// SetIsEnabled sets the value of IsEnabled.
func (s *Storage) SetIsEnabled(val bool) {
	s.IsEnabled = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Storage) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Storage) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #
type StoragePostgres struct {
	UUID OptString `json:"uuid"`
	// The username used to connect to the PostgreSQL database.
	User OptString `json:"user"`
	// The password used to connect to the PostgreSQL database.
	Password OptString `json:"password"`
	// The name of the PostgreSQL database.
	Name string `json:"name"`
	// The hostname or IP address of the PostgreSQL database server.
	Host string `json:"host"`
	// The port number on which the PostgreSQL database server is listening.
	Port OptString `json:"port"`
	// Additional connection options in URL query format.
	Options OptString `json:"options"`
}

// GetUUID returns the value of UUID.
func (s *StoragePostgres) GetUUID() OptString {
	return s.UUID
}

// GetUser returns the value of User.
func (s *StoragePostgres) GetUser() OptString {
	return s.User
}

// GetPassword returns the value of Password.
func (s *StoragePostgres) GetPassword() OptString {
	return s.Password
}

// GetName returns the value of Name.
func (s *StoragePostgres) GetName() string {
	return s.Name
}

// GetHost returns the value of Host.
func (s *StoragePostgres) GetHost() string {
	return s.Host
}

// GetPort returns the value of Port.
func (s *StoragePostgres) GetPort() OptString {
	return s.Port
}

// GetOptions returns the value of Options.
func (s *StoragePostgres) GetOptions() OptString {
	return s.Options
}

// SetUUID sets the value of UUID.
func (s *StoragePostgres) SetUUID(val OptString) {
	s.UUID = val
}

// SetUser sets the value of User.
func (s *StoragePostgres) SetUser(val OptString) {
	s.User = val
}

// SetPassword sets the value of Password.
func (s *StoragePostgres) SetPassword(val OptString) {
	s.Password = val
}

// SetName sets the value of Name.
func (s *StoragePostgres) SetName(val string) {
	s.Name = val
}

// SetHost sets the value of Host.
func (s *StoragePostgres) SetHost(val string) {
	s.Host = val
}

// SetPort sets the value of Port.
func (s *StoragePostgres) SetPort(val OptString) {
	s.Port = val
}

// SetOptions sets the value of Options.
func (s *StoragePostgres) SetOptions(val OptString) {
	s.Options = val
}

// StoragePostgresDeleteOK is response for StoragePostgresDelete operation.
type StoragePostgresDeleteOK struct{}

// Telegram API session and user representation.
// Ref: #
type TG struct {
	// Session ID.
	ID int `json:"id"`
	// Session phone number.
	Phone string `json:"phone"`
	// Optional description.
	Description OptNilString `json:"description"`
	// Last update time.
	UpdatedAt time.Time `json:"updated_at"`
	// Session creation time.
	CreatedAt time.Time `json:"created_at"`
	// User details.
	User TGUser `json:"user"`
}

// GetID returns the value of ID.
func (s *TG) GetID() int {
	return s.ID
}

// GetPhone returns the value of Phone.
func (s *TG) GetPhone() string {
	return s.Phone
}

// GetDescription returns the value of Description.
func (s *TG) GetDescription() OptNilString {
	return s.Description
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *TG) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TG) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUser returns the value of User.
func (s *TG) GetUser() TGUser {
	return s.User
}

// SetID sets the value of ID.
func (s *TG) SetID(val int) {
	s.ID = val
}

// SetPhone sets the value of Phone.
func (s *TG) SetPhone(val string) {
	s.Phone = val
}

// SetDescription sets the value of Description.
func (s *TG) SetDescription(val OptNilString) {
	s.Description = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *TG) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TG) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUser sets the value of User.
func (s *TG) SetUser(val TGUser) {
	s.User = val
}

// User details.
type TGUser struct {
	// User ID in Telegram.
	ID OptInt `json:"id"`
	// Username in Telegram.
	Username OptString `json:"username"`
	// First name.
	FirstName OptString `json:"first_name"`
	// Last name.
	LastName OptString `json:"last_name"`
	// User's phone number.
	Phone OptString `json:"phone"`
}

// GetID returns the value of ID.
func (s *TGUser) GetID() OptInt {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *TGUser) GetUsername() OptString {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *TGUser) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *TGUser) GetLastName() OptString {
	return s.LastName
}

// GetPhone returns the value of Phone.
func (s *TGUser) GetPhone() OptString {
	return s.Phone
}

// SetID sets the value of ID.
func (s *TGUser) SetID(val OptInt) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *TGUser) SetUsername(val OptString) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *TGUser) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *TGUser) SetLastName(val OptString) {
	s.LastName = val
}

// SetPhone sets the value of Phone.
func (s *TGUser) SetPhone(val OptString) {
	s.Phone = val
}

// Telegram API session and user representation.
// Ref: #
type Tg struct {
	// Session ID.
	ID int `json:"id"`
	// Session phone number.
	Phone string `json:"phone"`
	// Optional description.
	Description OptNilString `json:"description"`
	// Last update time.
	UpdatedAt time.Time `json:"updated_at"`
	// Session creation time.
	CreatedAt time.Time `json:"created_at"`
	// User details.
	User TgUser `json:"user"`
}

// GetID returns the value of ID.
func (s *Tg) GetID() int {
	return s.ID
}

// GetPhone returns the value of Phone.
func (s *Tg) GetPhone() string {
	return s.Phone
}

// GetDescription returns the value of Description.
func (s *Tg) GetDescription() OptNilString {
	return s.Description
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Tg) GetUpdatedAt() time.Time {
	return s.UpdatedAt
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Tg) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUser returns the value of User.
func (s *Tg) GetUser() TgUser {
	return s.User
}

// SetID sets the value of ID.
func (s *Tg) SetID(val int) {
	s.ID = val
}

// SetPhone sets the value of Phone.
func (s *Tg) SetPhone(val string) {
	s.Phone = val
}

// SetDescription sets the value of Description.
func (s *Tg) SetDescription(val OptNilString) {
	s.Description = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Tg) SetUpdatedAt(val time.Time) {
	s.UpdatedAt = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Tg) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUser sets the value of User.
func (s *Tg) SetUser(val TgUser) {
	s.User = val
}

type TgSessionCreateReq struct {
	// Phone number in international format.
	Phone string `json:"phone"`
}

// GetPhone returns the value of Phone.
func (s *TgSessionCreateReq) GetPhone() string {
	return s.Phone
}

// SetPhone sets the value of Phone.
func (s *TgSessionCreateReq) SetPhone(val string) {
	s.Phone = val
}

type TgSessionListOK struct {
	// Total number of sessions.
	Total    OptInt `json:"total"`
	Sessions []TG   `json:"sessions"`
}

// GetTotal returns the value of Total.
func (s *TgSessionListOK) GetTotal() OptInt {
	return s.Total
}

// GetSessions returns the value of Sessions.
func (s *TgSessionListOK) GetSessions() []TG {
	return s.Sessions
}

// SetTotal sets the value of Total.
func (s *TgSessionListOK) SetTotal(val OptInt) {
	s.Total = val
}

// SetSessions sets the value of Sessions.
func (s *TgSessionListOK) SetSessions(val []TG) {
	s.Sessions = val
}

type TgSessionVerifyReq struct {
	// Hash of the phone code.
	PhoneCodeHash OptString `json:"phone_code_hash"`
	// Verification code.
	Code OptString `json:"code"`
	// Optional password for 2FA.
	Password OptString `json:"password"`
}

// GetPhoneCodeHash returns the value of PhoneCodeHash.
func (s *TgSessionVerifyReq) GetPhoneCodeHash() OptString {
	return s.PhoneCodeHash
}

// GetCode returns the value of Code.
func (s *TgSessionVerifyReq) GetCode() OptString {
	return s.Code
}

// GetPassword returns the value of Password.
func (s *TgSessionVerifyReq) GetPassword() OptString {
	return s.Password
}

// SetPhoneCodeHash sets the value of PhoneCodeHash.
func (s *TgSessionVerifyReq) SetPhoneCodeHash(val OptString) {
	s.PhoneCodeHash = val
}

// SetCode sets the value of Code.
func (s *TgSessionVerifyReq) SetCode(val OptString) {
	s.Code = val
}

// SetPassword sets the value of Password.
func (s *TgSessionVerifyReq) SetPassword(val OptString) {
	s.Password = val
}

// User details.
type TgUser struct {
	// User ID in Telegram.
	ID OptInt `json:"id"`
	// Username in Telegram.
	Username OptString `json:"username"`
	// First name.
	FirstName OptString `json:"first_name"`
	// Last name.
	LastName OptString `json:"last_name"`
	// User's phone number.
	Phone OptString `json:"phone"`
}

// GetID returns the value of ID.
func (s *TgUser) GetID() OptInt {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *TgUser) GetUsername() OptString {
	return s.Username
}

// GetFirstName returns the value of FirstName.
func (s *TgUser) GetFirstName() OptString {
	return s.FirstName
}

// GetLastName returns the value of LastName.
func (s *TgUser) GetLastName() OptString {
	return s.LastName
}

// GetPhone returns the value of Phone.
func (s *TgUser) GetPhone() OptString {
	return s.Phone
}

// SetID sets the value of ID.
func (s *TgUser) SetID(val OptInt) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *TgUser) SetUsername(val OptString) {
	s.Username = val
}

// SetFirstName sets the value of FirstName.
func (s *TgUser) SetFirstName(val OptString) {
	s.FirstName = val
}

// SetLastName sets the value of LastName.
func (s *TgUser) SetLastName(val OptString) {
	s.LastName = val
}

// SetPhone sets the value of Phone.
func (s *TgUser) SetPhone(val OptString) {
	s.Phone = val
}
