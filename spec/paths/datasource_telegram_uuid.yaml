# spec/paths/datasource_telegram_uuid.yaml
get:
  description: Get a Telegram datasource
  operationId: datasource-telegram-get
  parameters:
    - description: UUID of the Telegram datasource
      in: path
      name: uuid
      required: true
      schema:
        type: string
  responses:
    "200":
      description: OK
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/DatasourceTelegram"
    default:
      description: Error
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/Error"
  tags:
    - datasource
    - datasource-telegram

put:
  description: Update a Telegram datasource
  operationId: datasource-telegram-update
  parameters:
    - description: UUID of the datasource
      in: path
      name: uuid
      required: true
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: "../openapi.yaml#/components/schemas/DatasourceTelegram"
  responses:
    "200":
      description: OK
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/DatasourceTelegram"
    default:
      description: Error
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/Error"
  tags:
    - datasource
    - datasource-telegram

delete:
  description: Delete a Telegram datasource
  operationId: datasource-telegram-delete
  parameters:
    - description: UUID of the Telegram datasource
      in: path
      name: uuid
      required: true
      schema:
        type: string
  responses:
    "200":
      description: OK
    default:
      description: Error
      content:
        application/json:
          schema:
            $ref: "../openapi.yaml#/components/schemas/Error"
  tags:
    - datasource
    - datasource-telegram
