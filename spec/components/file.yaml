FileObject:
  type: object
  description: "Represents a stored file, independent of the storage backend."
  properties:
    uuid:
      type: string
      description: "Unique identifier for the file."
    storage_type:
      type: string
      description: "Which storage backend is used, e.g. 's3', 'postgres', or 'hostfiles'."
    storage_uuid:
      type: string
      description: "UUID referencing a 'storage' record (optional)."
    name:
      type: string
      description: "Original filename. e.g. 'photo.jpg' or 'mail.raw'."
    mime_type:
      type: string
      description: "MIME type, e.g. 'application/pdf' or 'message/rfc822'."
    size:
      type: integer
      description: "Size in bytes."
    data:
      type: string
      format: binary
      description: "Optional. If storage_type='postgres', file content can be provided here (base64-encoded)."
    path:
      type: string
      description: "Optional. If hostfiles or s3, the path or object key. e.g. 'my-bucket/xx/uuid.pdf'."
    is_raw:
      type: boolean
      description: "Indicates if this file is the entire raw email."
    raw_headers:
      type: string
      description: "Raw headers if needed (for emails or similar)."
    has_raw_email:
      type: boolean
      description: "Indicates whether the raw email is contained in this file."
    is_inline:
      type: boolean
      description: "Indicates if this is an inline/embedded file (e.g. images in HTML emails)."
    created_at:
      type: string
      format: date-time
      description: "Timestamp when the file was created."
    updated_at:
      type: string
      format: date-time
      description: "Timestamp when the file was last modified."
  required:
    - storage_type
    - storage_uuid
    - name


UploadFileRequest:
  type: object
  description: File upload request metadata.
  additionalProperties: false
  properties:
    name:
      type: string
      description: Desired name of the file.
    mime_type:
      type: string
      description: MIME type of the file, defaults to "application/octet-stream".
    storage_uuid:
      type: string
      description: The UUID of the storage where this file will be uploaded.
  required:
    - storage_uuid


UploadFileResponse:
  type: object
  description: Response after uploading a file.
  properties:
    file:
      $ref: "../openapi.yaml#/components/schemas/FileObject"

UploadPresignedUrlRequest:
  type: object
  description: Request to generate a pre-signed URL for upload.
  properties:
    name:
      type: string
    mime_type:
      type: string
    storage_type:
      type: string
      enum: [s3, postgres, hostfiles]
      description: The target storage backend.

UploadPresignedUrlResponse:
  type: object
  description: Response with a pre-signed URL for upload.
  properties:
    upload_url:
      type: string
      description: Pre-signed URL for uploading the file.
    file:
      $ref: "../openapi.yaml#/components/schemas/FileObject"

GenerateDownloadLinkRequest:
  type: object
  description: Request to generate a download link.
  properties:
    file_uuid:
      type: string
    expiration:
      type: integer
      description: Expiration time in seconds for the download link.

GenerateDownloadLinkResponse:
  type: object
  description: Response containing a signed download link.
  properties:
    url:
      type: string
      description: Signed URL for downloading the file.