version: "3"

tasks:
  init:
    desc: "Check if precondition is functioning correctly, install frontend deps, build sqlc image"
    deps:
      - front-init
    cmds:
      - docker build -t sa-sqlc -f ./devops/sqlc.Dockerfile .

  front-init:
    desc: "Install frontend dependencies"
    dir: ./front
    cmds:
      - npm install

  clean:
    desc: "Clean docker compose and volumes"
    cmds:
      - docker compose -f docker-compose.dev.yaml down -v --rmi all --remove-orphans
      - docker compose -f docker-compose.prod.yaml down -v --rmi all --remove-orphans

  dev-up:
    desc: "Spin up all services in development mode"
    cmds:
      - docker compose -f docker-compose.dev.yaml up -d

  dev-down:
    desc: "Take down development services"
    cmds:
      - docker compose -f docker-compose.dev.yaml down

  prod-up:
    desc: "Spin up all services in production mode"
    cmds:
      - docker compose -f docker-compose.prod.yaml build
      - docker compose -f docker-compose.prod.yaml up -d

  prod-down:
    desc: "Take down production services"
    cmds:
      - docker compose -f docker-compose.prod.yaml down

  build-api:
    desc: "Build API backend binary locally"
    cmds:
      - go build -o ./bin/shadowapi ./cmd/shadowapi

  shell:
    desc: "Open a development shell in the backend container"
    cmds:
      - docker compose -f docker-compose.dev.yaml exec backend bash -l

  db-shell:
    desc: "Open Postgres shell in the container"
    cmds:
      - docker compose -f docker-compose.dev.yaml exec db su - postgres -c "psql -U shadowapi shadowapi"

  sync-db:
    desc: "Migrate database to latest changes using Atlas in the dev environment"
    cmds:
      - |2
        docker run --rm \
          --network shadowapi_shadowapi \
          -v ./db/schema.sql:/schema.sql \
          --name sa-atlas arigaio/atlas \
          schema apply \
            --url postgres://shadowapi:shadowapi@db:5432/shadowapi?sslmode=disable \
            --dev-url postgres://shadowapi:shadowapi@db:5432/shadowapi_schema?sslmode=disable \
            --to file://schema.sql \
            --auto-approve

  sqlc:
    desc: "Regenerate SQL queries package"
    cmds:
      - |2
        docker run --rm \
        -v ./db:/db -v ./backend/pkg:/pkg -w /db \
        --name sa-sqlc sa-sqlc generate
    preconditions:
      - sh: docker images | grep sa-sqlc

  api-gen-backend:
    desc: "Generate API specification in backend"
    dir: ./backend
    cmds:
      - go generate

  api-gen-frontend:
    desc: "Generate TypeScript API client in frontend"
    dir: ./front
    cmds:
      - npm run generate-api-client

  api-gen:
    desc: "Generate API specs (backend & frontend)"
    deps:
      - api-gen-backend
      - api-gen-frontend

  playwright-run:
    desc: "Run Playwright tests"
    dir: ./front
    cmds:
      - npx playwright test

  playwright-report:
    desc: "Generate and open Playwright test report"
    dir: ./front
    cmds:
      - npx playwright show-report
